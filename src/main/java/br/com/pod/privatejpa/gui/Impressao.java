/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.pod.privatejpa.gui;

import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.FontMetrics;
import java.io.File;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;

/**
 *
 * @author Stine
 */
public class Impressao extends javax.swing.JFrame {

    /**
     * Creates new form Impressao
     */
    public Impressao(String dados) {
        initComponents();
        setTitle("IMPRESSÃO");
        // Chama o método para formatar os dados
        String dadosFormatados = formatarDados(dados);
        centralizarTextoNoJTextArea(txtAreaDados, dadosFormatados);
    }

    private String formatarDados(String dados) {
        StringBuilder sb = new StringBuilder();

        // Verifique se os dados não são nulos ou vazios
        if (dados == null || dados.isEmpty()) {
            sb.append("Erro: Dados não encontrados.\n");
            return sb.toString();
        }

        // Inicialize as variáveis com valores padrão
        String cliente = "N/A";
        String dataEntrada = "N/A";
        String dataSaida = "N/A";
        String veiculo = "N/A";
        String placa = "N/A";
        String valorDiaria = "N/A";
        String valorTotal = "N/A";

        // Extração segura de cada dado com base na chave
        cliente = extrairDado(dados, "Cliente: ");
        dataEntrada = extrairDado(dados, "Data de Entrada: ");
        dataSaida = extrairDado(dados, "Data de Saída: ");
        veiculo = extrairDado(dados, "Veículo: ");
        placa = extrairDado(dados, "Placa: ");
        valorDiaria = extrairDado(dados, "Valor da Diária: ");
        valorTotal = extrairDado(dados, "Valor Total: ");

        // Formatação dos dados
        sb.append("*******************************\n");
        sb.append("        PRIVATE PARKING\n");
        sb.append("*******************************\n\n");
        sb.append("Pedido de Estacionamento\n");
        sb.append("============================\n");
        sb.append("Cliente: ").append(cliente).append("\n");
        sb.append("Data de Entrada: ").append(dataEntrada).append("\n");
        sb.append("Data de Saída: ").append(dataSaida).append("\n");
        sb.append("Veículo: ").append(veiculo).append("\n");
        sb.append("Placa: ").append(placa).append("\n");
        sb.append("Valor da Diária: ").append(valorDiaria).append("\n");
        sb.append("Valor Total: ").append(valorTotal).append("\n");
        sb.append("============================\n\n");
        sb.append("Agradecemos por utilizar nossos serviços!\n");

        return sb.toString();
    }

// Método para extrair dados com segurança
    private String extrairDado(String dados, String chave) {
        int indice = dados.indexOf(chave);
        if (indice != -1) {
            int inicio = indice + chave.length();
            int fim = dados.indexOf("\n", inicio);
            if (fim == -1) { // Caso o dado não tenha uma nova linha após ele
                fim = dados.length();
            }
            return dados.substring(inicio, fim).trim(); // Retorna o valor encontrado
        }
        return "N/A";  // Retorna um valor padrão caso a chave não seja encontrada
    }

    private void centralizarTextoNoJTextArea(JTextArea textArea, String text) {

// Limpa o conteúdo atual da JTextArea
        textArea.setText("");
        // Adiciona os dados formatados diretamente no JTextArea
        textArea.append(text);
        // Centraliza o texto dentro da JTextArea
        textArea.setAlignmentX(CENTER_ALIGNMENT);  // Define o alinhamento do texto para o centro
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDados = new javax.swing.JTextArea();
        btnGerarPDF = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAreaDados.setColumns(20);
        txtAreaDados.setRows(5);
        jScrollPane1.setViewportView(txtAreaDados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnGerarPDF.setBackground(new java.awt.Color(255, 255, 204));
        btnGerarPDF.setFont(new java.awt.Font("Arial Black", 1, 15)); // NOI18N
        btnGerarPDF.setForeground(new java.awt.Color(0, 0, 0));
        btnGerarPDF.setText("Gerar PDF ");
        btnGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPDFActionPerformed(evt);
            }
        });

        btnImprimir.setBackground(new java.awt.Color(204, 255, 204));
        btnImprimir.setFont(new java.awt.Font("Arial Black", 1, 15)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(0, 0, 0));
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(255, 255, 255));
        btnVoltar.setFont(new java.awt.Font("Arial Black", 1, 15)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(0, 0, 0));
        btnVoltar.setText("Voltar ");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(btnGerarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnGerarPDF)
                    .addComponent(btnVoltar))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPDFActionPerformed
        try {
            String userHome = System.getProperty("user.home");
            String downloadsPath = userHome + "/Downloads";
            String filePath = downloadsPath + "/Pedido.pdf"; // Cria um diretorio chamado PrivateParking dentro de Documentos.

            // Formatar os dados antes de gerar o PDF
            String dadosFormatados = txtAreaDados.getText();

            // Convertendo os dados para maiúsculas
            dadosFormatados = dadosFormatados.toUpperCase();

            Document document = new Document();
            File directory = new File(downloadsPath);
            if (!directory.exists()) {
                directory.mkdirs();
            }
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();

            // Adicionar os dados formatados no PDF e centralizar
            Paragraph paragraph = new Paragraph(dadosFormatados, new Font(Font.FontFamily.HELVETICA, 12));
            paragraph.setAlignment(Element.ALIGN_CENTER);  // Alinha o texto ao centro

            // Adiciona o parágrafo ao documento
            document.add(paragraph);

            document.close();
            JOptionPane.showMessageDialog(this, "PDF Gerado com Sucesso!");
        } catch (DocumentException | IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao gerar PDF: " + e.getMessage());
        }

    }//GEN-LAST:event_btnGerarPDFActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable(txtAreaDados.getPrintable(null, null));
        if (job.printDialog()) {
            try {
                job.print();
            } catch (PrinterException e) {
                JOptionPane.showMessageDialog(this, "Erro ao imprimir: " + e.getMessage());
            }
        }


    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed

        Menu menu = new Menu();
        menu.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Impressao telaImpressao = new Impressao("");
                telaImpressao.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarPDF;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaDados;
    // End of variables declaration//GEN-END:variables
}

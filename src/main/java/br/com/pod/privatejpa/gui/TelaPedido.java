/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.pod.privatejpa.gui;

import br.com.pod.privatejpa.persistencia.Cliente;
import br.com.pod.privatejpa.persistencia.ClienteDAO;
import br.com.pod.privatejpa.persistencia.Pedido;
import br.com.pod.privatejpa.persistencia.PedidoDAO;
import br.com.pod.privatejpa.persistencia.Veiculo;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Stine
 */
public class TelaPedido extends javax.swing.JFrame {

    /**
     * Creates new form Pedido
     */
    public TelaPedido() {
        initComponents();
        setTitle("PRIVATE PARKING");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDataSaida = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("PRIVATE PARKING");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Pedido");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(238, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(232, 232, 232))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel2)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Digite a Placa do Veículo:");

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Data de Saída:");

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Valor da Diária:");

        btnCalcular.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(255, 255, 255));
        btnVoltar.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(0, 0, 0));
        btnVoltar.setText("VOLTAR ");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(248, 248, 248)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPlaca)
                            .addComponent(txtDataSaida)
                            .addComponent(txtValor, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(209, 209, 209))))
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(btnCalcular)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

        String placa = txtPlaca.getText().trim().toUpperCase(); // Removendo espaços e convertendo para maiúsculas
        String dataSaidaString = txtDataSaida.getText().trim(); // Removendo espaços
        String valorDiariaString = txtValor.getText().trim();     // Removendo espaços

        // Validações Iniciais
        if (placa.isEmpty() || dataSaidaString.isEmpty() || valorDiariaString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos os campos são obrigatórios.");
            return;
        }

        // Validação do formato da placa
        String regex = "^[A-Z]{3}\\d[A-Z]\\d{2}$"; // Padrão ABC1D23
        if (!placa.matches(regex)) {
            JOptionPane.showMessageDialog(this, "Formato da placa inválido. Use o padrão ABC1D23.");
            return;
        }

        // Validação do formato da data
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dataSaida;
        try {
            dataSaida = LocalDate.parse(dataSaidaString, formatter);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de data inválido. Use dd/MM/yyyy.");
            return;
        }

        // Validação do valor da diária
        double valorDiaria;
        try {
            valorDiaria = Double.parseDouble(valorDiariaString);
            if (valorDiaria <= 0) {
                JOptionPane.showMessageDialog(this, "O valor da diária deve ser maior que zero.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valor da diária inválido. Use um número decimal.");
            return;
        }

        PedidoDAO pedidoDAO = new PedidoDAO();

        // Verificando se já existe um pedido finalizado com a mesma placa
        if (pedidoDAO.verificarPedidoFinalizado(placa)) {
            JOptionPane.showMessageDialog(this, "Pedido já finalizado para este veículo.");
            return;
        }

        ClienteDAO clienteDAO = new ClienteDAO();
        Cliente cliente = clienteDAO.buscarClientePorPlaca(placa);

        if (cliente == null) {
            JOptionPane.showMessageDialog(this, "Cliente não encontrado! Verifique a Placa digitada!");
        } else {

            long diasDeEstadia = java.time.temporal.ChronoUnit.DAYS.between(cliente.getDataEntrada(), dataSaida);
            if (diasDeEstadia < 0) {
                JOptionPane.showMessageDialog(this, "A data de saída não pode ser anterior à data de entrada do cliente.");
                return;
            }

            double valorTotal = calcularValorTotal(cliente);

            // Criar um novo pedido e salvar no banco de dados
            Pedido pedido = new Pedido();
            pedido.setCliente(cliente);
            pedido.setDataSaida(dataSaida);
            pedido.setValorTotal(valorTotal);

            try {
                pedidoDAO.cadastrar(pedido);
                JOptionPane.showMessageDialog(this, "Pedido Cadastrado com Sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar o pedido: " + e.getMessage());
                e.printStackTrace();
                return;
            }

            // Criar os dados do recibo
            String dados = "=======================================\n"
                    + "       PRIVATE PARKING\n"
                    + "=======================================\n\n"
                    + "Cliente: " + cliente.getNome() + "\n"
                    + "Data de Entrada: " + cliente.getDataEntrada().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")) + "\n"
                    + "Data de Saída: " + dataSaida.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")) + "\n"
                    + "Veículo: " + (cliente.getVeiculo() != null ? cliente.getVeiculo().getModelo() : "N/A") + "\n"
                    + "Placa: " + (cliente.getVeiculo() != null ? cliente.getVeiculo().getPlaca() : "N/A") + "\n\n"
                    + "Valor da Diária: R$ " + valorDiaria + "\n"
                    + "=======================================\n"
                    + "Valor Total: R$ " + valorTotal + "\n"
                    + "=======================================\n";

            Impressao telaImpressao = new Impressao(dados);
            telaImpressao.setVisible(true);
            dispose();
        }

    }

// Método para calcular o valor total com base nos dias de estadia
    private double calcularValorTotal(Cliente cliente) {
        // Obtém a data de saída a partir do campo de texto
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dataSaida = LocalDate.parse(txtDataSaida.getText(), formatter);

        // Calcula a diferença de dias entre a data de entrada do cliente e a data de saída
        long diasDeEstadia = java.time.temporal.ChronoUnit.DAYS.between(cliente.getDataEntrada(), dataSaida);

        if (diasDeEstadia < 0) {
            // Se a data de saída for anterior à data de entrada, retorna 0
            return 0;
        }

        // Verifica se o cliente ficou no mesmo dia (diasDeEstadia == 0)
        if (diasDeEstadia == 0) {
            // Exibe a mensagem informando sobre a cobrança mínima
            JOptionPane.showMessageDialog(this, "Cliente realizou a entrada na data de hoje! Cobrança mínima de R$ 15,00!");

            // Retorna o valor mínimo de R$ 15,00
            return 15.00;
        }

        // Obtém o valor da diária do campo de texto
        double valorDiaria = Double.parseDouble(txtValor.getText());

        // Calcula e retorna o valor total
        return diasDeEstadia * valorDiaria;

    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPedido().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDataSaida;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
